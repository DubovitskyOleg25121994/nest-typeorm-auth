version: '3.3'

services:
  nest:
    container_name: nest
    build:
      context: ./
    depends_on:
      - db
      - redis
    volumes:
      - ./src:/usr/src/app/src
    environment:
      - PORT=3000
      - NODE_ENV=dev
      - TYPEORM_CONNECTION=postgres
      - TYPEORM_HOST=db
      - TYPEORM_HOSTS=["db"]
      - TYPEORM_USERNAME=super_user
      - TYPEORM_PASSWORD=super_user
      - TYPEORM_DATABASE=dev_db
      - TYPEORM_PORT=5432
      - TYPEORM_SYNCHRONIZE=false
      - TYPEORM_LOGGING=false
      - TYPEORM_ENTITIES=src/**/**.entity.ts
      - TYPEORM_MIGRATIONS_DIR=migrations
      - TYPEORM_MIGRATIONS=migrations/*.ts
      - JWT_SECRET=JWT_SECRET
      - JWT_EXPIRES_IN=20m
      - SALT_ROUNDS=10
      - TOKEN_LENGTH=30
      - REMOVE_GUARD=false
      - SMTP_DOMAIN=
      - SMTP_DOMAIN_USER=
      - SMTP_DOMAIN_PASSWORD=
      - TOKEN_EXPIRES_IN=1
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - UI_URL=http://locahost:3000
    command: >
      bash -c "sleep 10 && npm run typeorm:migration:run && npm run start:dev"

  redis:
    image: 'redis:alpine'
    ports:
      - '6379:6379'

  db:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_DB=dev_db
      - POSTGRES_USER=super_user
      - POSTGRES_PASSWORD=super_user
    restart: unless-stopped
    ports:
      - '5432:5432'
    volumes:
      - ./etc/db/initdb/init.sql:/docker-entrypoint-initdb.d/init.sql

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    volumes:
      - ./etc/nginx/local.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - db
      - nest
    ports:
      - 3000:3000
